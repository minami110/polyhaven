#usda 1.0
(
    defaultPrim = "looks"
)

def Scope "looks"
{
    def "body" (
        prepend references = @../polyheaven_base_look.usda@</base>
    )
    {
        custom float inputs:ao_intensity = 1
        custom asset inputs:texture_arm = @./textures/brass_diya_lantern_arm_1k.exr@
        custom asset inputs:texture_basecolor = @./textures/brass_diya_lantern_diff_1k.exr@
        custom asset inputs:texture_normal = @./textures/brass_diya_lantern_nor_gl_1k.exr@
    }

    def "glass" (
        prepend references = @../polyheaven_base_look_glass.usda@</base>
    )
    {
        custom asset inputs:texture_arm = @./textures/brass_diya_lantern_arm_1k.exr@
        custom asset inputs:texture_normal = @./textures/brass_diya_lantern_nor_gl_1k.exr@
        custom float inputs:usenormalmap = 1
    }

    def Material "flame"
    {
        token outputs:mtlx:surface.connect = </looks/flame/mtlxstandard_surface1.outputs:out>

        def Shader "mtlxstandard_surface1"
        {
            uniform token info:id = "ND_standard_surface_surfaceshader"
            float inputs:base = 0
            float inputs:emission = 10
            color3f inputs:emission_color.connect = </looks/flame/mtlxblackbody1.outputs:out>
            color3f inputs:opacity.connect = </looks/flame/mtlximage1.outputs:out>
            float inputs:specular_IOR = 1
            token outputs:out
        }

        def Shader "mtlxblackbody1"
        {
            uniform token info:id = "ND_blackbody"
            float inputs:temperature = 3000
            color3f outputs:out
        }

        def Shader "mtlximage1"
        {
            uniform token info:id = "ND_image_float"
            asset inputs:file = @./textures/brass_diya_lantern_opacity_1k.exr@
            float outputs:out
        }
    }
}

