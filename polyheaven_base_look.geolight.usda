#usda 1.0

def Material "base"
{
    token outputs:mtlx:surface.connect = </base/mtlxSurfaceUnlit.outputs:out>

    def Shader "mtlxSurfaceUnlit"
    {
        uniform token info:id = "ND_surface_unlit"
        float inputs:emission (
            customData = {
                dictionary HoudiniPreviewTags = {
                    double default_value = 1
                    string ogl_diff_intensity = "1"
                }
            }
        )
        float inputs:emission.connect = </base/usdprimvarreader1.outputs:result>
        color3f inputs:emission_color (
            customData = {
                dictionary HoudiniPreviewTags = {
                    double3 default_value = (1, 1, 1)
                    string ogl_diff = "1"
                }
            }
        )
        color3f inputs:emission_color.connect = </base/mtlxblackbody1.outputs:out>
        float inputs:opacity (
            customData = {
                dictionary HoudiniPreviewTags = {
                    double default_value = 1
                    string ogl_alpha = "1"
                }
            }
        )
        float inputs:transmission (
            customData = {
                dictionary HoudiniPreviewTags = {
                    double default_value = 0
                    string ogl_transparency = "1"
                }
            }
        )
        token outputs:out
    }

    def Shader "usdprimvarreader1"
    {
        uniform token info:id = "UsdPrimvarReader_float"
        float inputs:fallback = 1
        string inputs:varname = "emission"
        float outputs:result
    }

    def Shader "mtlxblackbody1"
    {
        uniform token info:id = "ND_blackbody"
        float inputs:temperature.connect = </base/usdprimvarreader2.outputs:result>
        color3f outputs:out
    }

    def Shader "usdprimvarreader2"
    {
        uniform token info:id = "UsdPrimvarReader_float"
        float inputs:fallback = 5000
        string inputs:varname = "temperature"
        float outputs:result
    }
}