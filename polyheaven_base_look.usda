#usda 1.0

class Material "base"
{
    token outputs:mtlx:surface.connect = </base/mtlxStandardSurface.outputs:out>

    # Custom values
    custom asset inputs:texture_basecolor = @@
    custom asset inputs:texture_arm = @@
    custom asset inputs:texture_normal = @@
    custom float inputs:ao_intensity = 0

    # Material X
    def Shader "mtlxStandardSurface"
    {
        uniform token info:id = "ND_standard_surface_surfaceshader"
        color3f inputs:base_color.connect = </base/mtlxmultiply1.outputs:out>
        vector3f inputs:normal.connect = </base/mtlxnormalmap1.outputs:out>
        float inputs:metalness.connect = </base/mtlxseparate3c1.outputs:outb>
        float inputs:specular_roughness.connect = </base/mtlxseparate3c1.outputs:outg>
        token outputs:out
    }

    def Shader "mtlxmultiply1"
    {
        uniform token info:id = "ND_multiply_color3FA"
        color3f inputs:in1.connect = </base/mtlx_base.outputs:out>
        float inputs:in2.connect = </base/mtlxoneminus.outputs:out>
        color3f outputs:out
    }

    def Shader "mtlxoneminus"
    {
        uniform token info:id = "ND_subtract_float"
        float inputs:in1 = 1
        float inputs:in2.connect = </base/mtlxmultiply2.outputs:out>
        float outputs:out
    }

    def Shader "mtlxmultiply2"
    {
        uniform token info:id = "ND_multiply_float"
        float inputs:in1.connect = </base/mtlxoneminus2.outputs:out>
        float inputs:in2.connect = </base/mtlx_aointensity.outputs:out>
        float outputs:out
    }

    def Shader "mtlxoneminus2"
    {
        uniform token info:id = "ND_subtract_float"
        float inputs:in1 = 1
        float inputs:in2.connect = </base/mtlxseparate3c1.outputs:outr>
        float outputs:out
    }

    def Shader "mtlx_aointensity"
    {
        uniform token info:id = "ND_constant_float"
        float inputs:value.connect = </base.inputs:ao_intensity>
        float outputs:out
    }

    def Shader "mtlx_base"
    {
        uniform token info:id = "ND_image_color3"
        asset inputs:file.connect = </base.inputs:texture_basecolor>
        color3f outputs:out
    }

    def Shader "mtlxseparate3c1"
    {
        uniform token info:id = "ND_separate3_color3"
        color3f inputs:in.connect = </base/mtlx_arm.outputs:out>
        float outputs:outr
        float outputs:outb
        float outputs:outg
    }

    def Shader "mtlx_arm"
    {
        uniform token info:id = "ND_image_color3"
        asset inputs:file.connect = </base.inputs:texture_arm>
        color3f outputs:out
    }

    def Shader "mtlxnormalmap1"
    {
        uniform token info:id = "ND_normalmap"
        vector3f inputs:in.connect = </base/mtlx_normal.outputs:out>
        vector3f outputs:out
    }

    def Shader "mtlx_normal"
    {
        uniform token info:id = "ND_image_vector3"
        asset inputs:file.connect = </base.inputs:texture_normal>
        vector3f outputs:out
    }
}
