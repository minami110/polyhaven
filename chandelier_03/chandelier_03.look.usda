#usda 1.0
(
    defaultPrim = "looks"
)

def Scope "looks"
{
    def "body" (
        prepend references = @../polyheaven_base_look.usda@</base>
    )
    {
        custom float inputs:ao_intensity = 1
        custom asset inputs:texture_arm = @./textures/Chandelier_03_arm_1k.exr@
        custom asset inputs:texture_basecolor = @./textures/Chandelier_03_diff_1k.exr@
        custom asset inputs:texture_normal = @./textures/Chandelier_03_nor_gl_1k.exr@
    }

    def "glass" (
        prepend references = @../polyheaven_base_look_glass.usda@</base>
    )
    {
        custom asset inputs:texture_arm = @./textures/Chandelier_03_arm_1k.exr@
        custom asset inputs:texture_normal = @./textures/Chandelier_03_nor_gl_1k.exr@
        custom float inputs:usenormalmap = 1
    }

    def Material "light"
    {
        token outputs:mtlx:surface.connect = </looks/light/light.outputs:out>

        def Shader "light"
        {
            uniform token info:id = "ND_surface_unlit"
            float inputs:emission.connect = </looks/light/usdprimvarreader1.outputs:result>
            color3f inputs:emission_color.connect = </looks/light/mtlxblackbody1.outputs:out>
            token outputs:out
        }

        def Shader "usdprimvarreader1"
        {
            uniform token info:id = "UsdPrimvarReader_float"
            float inputs:fallback = 1
            string inputs:varname = "emission"
            float outputs:result
        }

        def Shader "mtlxblackbody1"
        {
            uniform token info:id = "ND_blackbody"
            float inputs:temperature.connect = </looks/light/usdprimvarreader2.outputs:result>
            color3f outputs:out
        }

        def Shader "usdprimvarreader2"
        {
            uniform token info:id = "UsdPrimvarReader_float"
            float inputs:fallback = 5000
            string inputs:varname = "temperature"
            float outputs:result
        }
    }
}

